# Generated by Django 5.1.4 on 2025-03-03 11:38

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'uuid',
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                (
                    'is_deleted',
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text='Designates whether this record was deleted using soft             deletion. Default is False.',
                    ),
                ),
                (
                    'created_on',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        help_text='Timestamp when this record was created.',
                    ),
                ),
                (
                    'updated_on',
                    models.DateTimeField(
                        auto_now=True,
                        help_text='Timestamp when this record was last updated.',
                    ),
                ),
                (
                    'deleted_on',
                    models.DateTimeField(
                        blank=True,
                        help_text='Timestamp when this record was soft deleted.',
                        null=True,
                    ),
                ),
                (
                    'name',
                    models.CharField(
                        help_text='Name of the category (e.g., Electronics, Clothing).',
                        max_length=100,
                        unique=True,
                        verbose_name='Category Name',
                    ),
                ),
                (
                    'slug',
                    models.SlugField(
                        blank=True,
                        help_text='SEO-friendly URL slug (auto-generated if blank).',
                        max_length=120,
                        null=True,
                        unique=True,
                        verbose_name='URL Slug',
                    ),
                ),
                (
                    'image',
                    models.ImageField(
                        blank=True,
                        help_text='Optional image representing the category.',
                        null=True,
                        upload_to='categories/%Y/%m/',
                        verbose_name='Category Image',
                    ),
                ),
                (
                    'keyword',
                    models.CharField(
                        blank=True,
                        help_text='SEO keywords for the category (comma-separated).',
                        max_length=350,
                        null=True,
                        verbose_name='SEO Keywords',
                    ),
                ),
                (
                    'meta_name',
                    models.CharField(
                        blank=True,
                        help_text='SEO meta title for search engine visibility.',
                        max_length=250,
                        null=True,
                        verbose_name='Meta Title',
                    ),
                ),
                (
                    'meta_description',
                    models.TextField(
                        blank=True,
                        help_text='SEO meta description to improve search ranking.',
                        max_length=500,
                        null=True,
                        verbose_name='Meta Description',
                    ),
                ),
                (
                    'is_featured',
                    models.BooleanField(
                        default=False,
                        help_text='Check if this category should be featured.',
                        verbose_name='Featured',
                    ),
                ),
                (
                    'display_order',
                    models.PositiveIntegerField(
                        default=0,
                        help_text='Controls the display order (lower numbers first).',
                        verbose_name='Display Order',
                    ),
                ),
                (
                    'is_active',
                    models.BooleanField(
                        default=True,
                        help_text='Whether this category is active and visible.',
                        verbose_name='Active',
                    ),
                ),
                (
                    'created_by',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(class)s_created',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'parent',
                    models.ForeignKey(
                        blank=True,
                        help_text='Parent category (if this is a sub-category).',
                        null=True,
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name='subcategories',
                        to='listings.category',
                        verbose_name='Parent Category',
                    ),
                ),
                (
                    'updated_by',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(class)s_updated',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['display_order', 'name'],
                'indexes': [
                    models.Index(fields=['name'], name='category_name_idx'),
                    models.Index(fields=['slug'], name='category_slug_idx'),
                    models.Index(
                        fields=['is_active'], name='category_active_idx'
                    ),
                    models.Index(
                        fields=['is_featured'], name='category_featured_idx'
                    ),
                    models.Index(fields=['parent'], name='category_parent_idx'),
                ],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'uuid',
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                (
                    'is_deleted',
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text='Designates whether this record was deleted using soft             deletion. Default is False.',
                    ),
                ),
                (
                    'created_on',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        help_text='Timestamp when this record was created.',
                    ),
                ),
                (
                    'updated_on',
                    models.DateTimeField(
                        auto_now=True,
                        help_text='Timestamp when this record was last updated.',
                    ),
                ),
                (
                    'deleted_on',
                    models.DateTimeField(
                        blank=True,
                        help_text='Timestamp when this record was soft deleted.',
                        null=True,
                    ),
                ),
                (
                    'name',
                    models.CharField(
                        help_text='Tag name (e.g., Sale, New Arrival, Eco-friendly).',
                        max_length=100,
                        unique=True,
                        verbose_name='Tag Name',
                    ),
                ),
                (
                    'slug',
                    models.SlugField(
                        blank=True,
                        help_text='SEO-friendly URL slug (auto-generated if blank).',
                        max_length=120,
                        null=True,
                        unique=True,
                        verbose_name='URL Slug',
                    ),
                ),
                (
                    'is_active',
                    models.BooleanField(
                        default=True,
                        help_text='Whether this tag is active and visible to users.',
                        verbose_name='Active',
                    ),
                ),
                (
                    'created_by',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(class)s_created',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'updated_by',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(class)s_updated',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['name'],
                'indexes': [
                    models.Index(fields=['name'], name='tag_name_idx'),
                    models.Index(fields=['slug'], name='tag_slug_idx'),
                    models.Index(fields=['is_active'], name='tag_active_idx'),
                ],
            },
        ),
    ]
