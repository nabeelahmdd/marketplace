# Generated by Django 5.1.4 on 2025-03-03 13:54

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('listings', '0001_initial'),
        ('users', '0003_user_is_seller'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Listing',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'uuid',
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                (
                    'is_active',
                    models.BooleanField(
                        db_index=True,
                        default=True,
                        help_text='Designates whether this record is active. Default is True.',
                    ),
                ),
                (
                    'is_deleted',
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text='Designates whether this record was deleted using soft             deletion. Default is False.',
                    ),
                ),
                (
                    'created_on',
                    models.DateTimeField(
                        auto_now_add=True,
                        db_index=True,
                        help_text='Timestamp when this record was created.',
                    ),
                ),
                (
                    'updated_on',
                    models.DateTimeField(
                        auto_now=True,
                        help_text='Timestamp when this record was last updated.',
                    ),
                ),
                (
                    'deleted_on',
                    models.DateTimeField(
                        blank=True,
                        help_text='Timestamp when this record was soft deleted.',
                        null=True,
                    ),
                ),
                ('title', models.CharField(max_length=255)),
                (
                    'slug',
                    models.SlugField(blank=True, max_length=255, unique=True),
                ),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('price_negotiable', models.BooleanField(default=False)),
                ('currency', models.CharField(default='USD', max_length=3)),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('draft', 'Draft'),
                            ('active', 'Active'),
                            ('pending', 'Pending Approval'),
                            ('suspended', 'Suspended'),
                            ('expired', 'Expired'),
                            ('sold', 'Sold'),
                            ('archived', 'Archived'),
                        ],
                        default='draft',
                        max_length=20,
                    ),
                ),
                (
                    'condition',
                    models.CharField(
                        choices=[
                            ('new', 'New'),
                            ('like_new', 'Like New'),
                            ('good', 'Good'),
                            ('fair', 'Fair'),
                            ('poor', 'Poor'),
                        ],
                        default='new',
                        max_length=20,
                    ),
                ),
                (
                    'location',
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326
                    ),
                ),
                (
                    'address',
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    'city',
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    'state',
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    'postal_code',
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    'country',
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('favorite_count', models.PositiveIntegerField(default=0)),
                (
                    'search_appearance_count',
                    models.PositiveIntegerField(default=0),
                ),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                (
                    'category',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='listings',
                        to='listings.category',
                    ),
                ),
                (
                    'created_by',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(class)s_created',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'seller',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='listings',
                        to='users.seller',
                    ),
                ),
                (
                    'updated_by',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(class)s_updated',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='ListingImage',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('image', models.ImageField(upload_to='listings/')),
                (
                    'alt_text',
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ('is_primary', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                (
                    'listing',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='images',
                        to='listings.listing',
                    ),
                ),
            ],
            options={
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='listing',
            index=models.Index(
                fields=['category', 'status'],
                name='listings_li_categor_fcaf14_idx',
            ),
        ),
        migrations.AddIndex(
            model_name='listing',
            index=models.Index(
                fields=['seller', 'status'],
                name='listings_li_seller__3237a3_idx',
            ),
        ),
        migrations.AddIndex(
            model_name='listing',
            index=models.Index(
                fields=['published_at'], name='listings_li_publish_32106c_idx'
            ),
        ),
    ]
